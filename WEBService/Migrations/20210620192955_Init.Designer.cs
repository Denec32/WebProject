// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WEBService.Models;

namespace WEBService.Migrations
{
    [DbContext(typeof(WebServiceDBContext))]
    [Migration("20210620192955_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("WEBService.Models.CurrentTransformer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CheckDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ElectricityMeasuringPointId")
                        .HasColumnType("integer");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<double>("TransformationRatio")
                        .HasColumnType("double precision");

                    b.Property<string>("TransformerType")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("CurrentTransformers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CheckDate = new DateTime(2021, 6, 20, 22, 29, 54, 426, DateTimeKind.Local).AddTicks(2164),
                            ElectricityMeasuringPointId = 1,
                            Number = "12AC",
                            TransformationRatio = 1.2,
                            TransformerType = "C1"
                        });
                });

            modelBuilder.Entity("WEBService.Models.ElectricityMeasuringPoint", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("PointOfUseId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("ElectricityMeasuringPoints");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Point 1",
                            PointOfUseId = 1
                        });
                });

            modelBuilder.Entity("WEBService.Models.ElectricityMeter", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CheckDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ElectricityMeasuringPointId")
                        .HasColumnType("integer");

                    b.Property<string>("MeterType")
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("ElectricityMeters");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CheckDate = new DateTime(2021, 6, 20, 22, 29, 54, 425, DateTimeKind.Local).AddTicks(2872),
                            ElectricityMeasuringPointId = 1,
                            MeterType = "V1",
                            Number = "12AB"
                        });
                });

            modelBuilder.Entity("WEBService.Models.MeteringDevice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("ID");

                    b.ToTable("MeteringDevices");

                    b.HasData(
                        new
                        {
                            ID = 1
                        });
                });

            modelBuilder.Entity("WEBService.Models.Organization", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "ул. 8 Марта 35",
                            Name = "Parent"
                        });
                });

            modelBuilder.Entity("WEBService.Models.PointOfUse", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("SubsidiaryId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("PointsOfUse");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "ул. Калинина 12",
                            Name = "Consumer",
                            SubsidiaryId = 1
                        });
                });

            modelBuilder.Entity("WEBService.Models.PotentialTransformer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CheckDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ElectricityMeasuringPointId")
                        .HasColumnType("integer");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<double>("TransformationRatio")
                        .HasColumnType("double precision");

                    b.Property<string>("TransformerType")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("PotentialTransformers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CheckDate = new DateTime(2021, 6, 20, 22, 29, 54, 426, DateTimeKind.Local).AddTicks(3657),
                            ElectricityMeasuringPointId = 1,
                            Number = "12AD",
                            TransformationRatio = 1.8,
                            TransformerType = "P1"
                        });
                });

            modelBuilder.Entity("WEBService.Models.Subsidiary", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("Subsidiaries");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "ул. Пушкина 12А",
                            Name = "Child",
                            OrganizationId = 1
                        });
                });

            modelBuilder.Entity("WEBService.Models.SupplyEndpoint", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<float>("MaxPower")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("PointOfUseId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("SupplyEndpoints");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            MaxPower = 12f,
                            Name = "EndPoint 1",
                            PointOfUseId = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
